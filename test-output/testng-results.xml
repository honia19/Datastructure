<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="317" passed="317">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="9421" started-at="2017-06-05T13:06:43Z" finished-at="2017-06-05T13:06:52Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="9421" started-at="2017-06-05T13:06:43Z" finished-at="2017-06-05T13:06:52Z">
      <class name="LList2WhiteNG">
        <test-method status="PASS" signature="testAddEnd_0()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testAddEnd_0" duration-ms="2" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddEnd_0 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddEnd_1()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testAddEnd_1" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddEnd_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddEnd_2()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testAddEnd_2" duration-ms="4" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddEnd_2 -->
        <test-method status="PASS" signature="testAddEnd_many()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testAddEnd_many" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddEnd_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddPos_1_End()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testAddPos_1_End" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddPos_1_End -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddPos_1_Start()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testAddPos_1_Start" duration-ms="2" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddPos_1_Start -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddPos_2_End()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testAddPos_2_End" duration-ms="7" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddPos_2_End -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddPos_many()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testAddPos_many" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddPos_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddStart_0()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testAddStart_0" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddStart_0 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddStart_1()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testAddStart_1" duration-ms="7" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddStart_1 -->
        <test-method status="PASS" signature="testAddStart_2()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testAddStart_2" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddStart_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddStart_many()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testAddStart_many" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddStart_many -->
        <test-method status="PASS" signature="testDelEnd_1()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testDelEnd_1" duration-ms="2" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelEnd_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelEnd_2()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testDelEnd_2" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelEnd_2 -->
        <test-method status="PASS" signature="testDelEnd_many()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testDelEnd_many" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelEnd_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="2" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelPos_1_2()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testDelPos_1_2" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelPos_1_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelPos_2_2()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testDelPos_2_2" duration-ms="9" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelPos_2_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelPos_2_3()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testDelPos_2_3" duration-ms="3" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelPos_2_3 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelPos_many_1()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testDelPos_many_1" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelPos_many_1 -->
        <test-method status="PASS" signature="testDelPos_many_2()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testDelPos_many_2" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelPos_many_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelPos_many_3()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testDelPos_many_3" duration-ms="2" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelPos_many_3 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDellStart_1()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testDellStart_1" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDellStart_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="7" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDellStart_2()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testDellStart_2" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDellStart_2 -->
        <test-method status="PASS" signature="testDellstart_many()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testDellstart_many" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDellstart_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testHalfReverse_0()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testHalfReverse_0" duration-ms="4" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHalfReverse_0 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testHalfReverse_1()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testHalfReverse_1" duration-ms="2" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHalfReverse_1 -->
        <test-method status="PASS" signature="testHalfReverse_2()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testHalfReverse_2" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHalfReverse_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testInt_0()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testInt_0" duration-ms="2" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInt_0 -->
        <test-method status="PASS" signature="testInt_1()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testInt_1" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInt_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testInt_null()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testInt_null" duration-ms="2" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInt_null -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testReverse_0()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testReverse_0" duration-ms="5" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReverse_0 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testReverse_1()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testReverse_1" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReverse_1 -->
        <test-method status="PASS" signature="testReverse_2()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testReverse_2" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReverse_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testReverse_many()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testReverse_many" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReverse_many -->
        <test-method status="PASS" signature="testSort_0()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testSort_0" duration-ms="2" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort_0 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSort_1()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testSort_1" duration-ms="2" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSort_2()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testSort_2" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort_2 -->
        <test-method status="PASS" signature="testSort_3()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testSort_3" duration-ms="14" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort_3 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="27" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testToArray_2()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testToArray_2" duration-ms="36" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToArray_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testToArray_many()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testToArray_many" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToArray_many -->
        <test-method status="PASS" signature="testhalfReverse_many()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testhalfReverse_many" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testhalfReverse_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="5" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testhalfReverse_many_even()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testhalfReverse_many_even" duration-ms="2" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testhalfReverse_many_even -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="3" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testsort_many()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testsort_many" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsort_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testsort_many_again()[pri:0, instance:LList2WhiteNG@5c7fa833]" name="testsort_many_again" duration-ms="3" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsort_many_again -->
      </class> <!-- LList2WhiteNG -->
      <class name="LListTest1NG">
        <test-method status="PASS" signature="setUp()[pri:0, instance:LListTest1NG@548b7f67]" name="setUp" is-config="true" duration-ms="22" started-at="2017-06-05T16:06:43Z" finished-at="2017-06-05T16:06:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddStart_0()[pri:0, instance:LListTest1NG@548b7f67]" name="testAddStart_0" duration-ms="49" started-at="2017-06-05T16:06:43Z" finished-at="2017-06-05T16:06:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddStart_0 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LListTest1NG@548b7f67]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:43Z" finished-at="2017-06-05T16:06:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddStart_0()[pri:0, instance:LListTest1NG@5ae9a829]" name="testAddStart_0" duration-ms="18" started-at="2017-06-05T16:06:43Z" finished-at="2017-06-05T16:06:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddStart_0 -->
        <test-method status="PASS" signature="testAddStart_0()[pri:0, instance:LListTest1NG@6d8a00e3]" name="testAddStart_0" duration-ms="51" started-at="2017-06-05T16:06:43Z" finished-at="2017-06-05T16:06:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddStart_0 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LListTest1NG@548b7f67]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:43Z" finished-at="2017-06-05T16:06:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LListTest1NG@548b7f67]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:43Z" finished-at="2017-06-05T16:06:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddStart_1()[pri:0, instance:LListTest1NG@548b7f67]" name="testAddStart_1" duration-ms="13" started-at="2017-06-05T16:06:43Z" finished-at="2017-06-05T16:06:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddStart_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LListTest1NG@548b7f67]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:43Z" finished-at="2017-06-05T16:06:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddStart_1()[pri:0, instance:LListTest1NG@5ae9a829]" name="testAddStart_1" duration-ms="17" started-at="2017-06-05T16:06:43Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddStart_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LListTest1NG@548b7f67]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddStart_1()[pri:0, instance:LListTest1NG@6d8a00e3]" name="testAddStart_1" duration-ms="15" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddStart_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LListTest1NG@548b7f67]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddStart_2()[pri:0, instance:LListTest1NG@548b7f67]" name="testAddStart_2" duration-ms="7" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddStart_2 -->
        <test-method status="PASS" signature="testAddStart_2()[pri:0, instance:LListTest1NG@5ae9a829]" name="testAddStart_2" duration-ms="12" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddStart_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LListTest1NG@548b7f67]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddStart_2()[pri:0, instance:LListTest1NG@6d8a00e3]" name="testAddStart_2" duration-ms="8" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddStart_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LListTest1NG@548b7f67]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LListTest1NG@548b7f67]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddStart_many()[pri:0, instance:LListTest1NG@548b7f67]" name="testAddStart_many" duration-ms="7" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddStart_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LListTest1NG@548b7f67]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddStart_many()[pri:0, instance:LListTest1NG@5ae9a829]" name="testAddStart_many" duration-ms="7" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddStart_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LListTest1NG@548b7f67]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddStart_many()[pri:0, instance:LListTest1NG@6d8a00e3]" name="testAddStart_many" duration-ms="18" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddStart_many -->
        <test-method status="PASS" signature="testInt_0()[pri:0, instance:LListTest1NG@548b7f67]" name="testInt_0" duration-ms="2" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInt_0 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LListTest1NG@548b7f67]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LListTest1NG@548b7f67]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testInt_0()[pri:0, instance:LListTest1NG@5ae9a829]" name="testInt_0" duration-ms="10" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInt_0 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LListTest1NG@548b7f67]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testInt_0()[pri:0, instance:LListTest1NG@6d8a00e3]" name="testInt_0" duration-ms="6" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInt_0 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LListTest1NG@548b7f67]" name="setUp" is-config="true" duration-ms="6" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testInt_1()[pri:0, instance:LListTest1NG@548b7f67]" name="testInt_1" duration-ms="16" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInt_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LListTest1NG@548b7f67]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testInt_1()[pri:0, instance:LListTest1NG@5ae9a829]" name="testInt_1" duration-ms="6" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInt_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LListTest1NG@548b7f67]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testInt_1()[pri:0, instance:LListTest1NG@6d8a00e3]" name="testInt_1" duration-ms="2" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInt_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LListTest1NG@548b7f67]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testInt_constr()[pri:0, instance:LListTest1NG@548b7f67]" name="testInt_constr" duration-ms="4" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInt_constr -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LListTest1NG@548b7f67]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testInt_constr()[pri:0, instance:LListTest1NG@5ae9a829]" name="testInt_constr" duration-ms="32" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInt_constr -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LListTest1NG@548b7f67]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testInt_constr()[pri:0, instance:LListTest1NG@6d8a00e3]" name="testInt_constr" duration-ms="16" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInt_constr -->
        <test-method status="PASS" signature="testInt_null()[pri:0, instance:LListTest1NG@548b7f67]" name="testInt_null" duration-ms="31" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInt_null -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LListTest1NG@548b7f67]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LListTest1NG@548b7f67]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testInt_null()[pri:0, instance:LListTest1NG@5ae9a829]" name="testInt_null" duration-ms="3" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInt_null -->
        <test-method status="PASS" signature="testInt_null()[pri:0, instance:LListTest1NG@6d8a00e3]" name="testInt_null" duration-ms="5" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInt_null -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LListTest1NG@548b7f67]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LListTest1NG@548b7f67]" name="setUp" is-config="true" duration-ms="2" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testToArray_2()[pri:0, instance:LListTest1NG@548b7f67]" name="testToArray_2" duration-ms="5" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToArray_2 -->
        <test-method status="PASS" signature="testToArray_2()[pri:0, instance:LListTest1NG@5ae9a829]" name="testToArray_2" duration-ms="2" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToArray_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LListTest1NG@548b7f67]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LListTest1NG@548b7f67]" name="setUp" is-config="true" duration-ms="100" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testToArray_2()[pri:0, instance:LListTest1NG@6d8a00e3]" name="testToArray_2" duration-ms="8" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToArray_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LListTest1NG@548b7f67]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testToArray_many()[pri:0, instance:LListTest1NG@548b7f67]" name="testToArray_many" duration-ms="246" started-at="2017-06-05T16:06:44Z" finished-at="2017-06-05T16:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToArray_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LListTest1NG@548b7f67]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:45Z" finished-at="2017-06-05T16:06:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testToArray_many()[pri:0, instance:LListTest1NG@5ae9a829]" name="testToArray_many" duration-ms="4" started-at="2017-06-05T16:06:45Z" finished-at="2017-06-05T16:06:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToArray_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:LListTest1NG@548b7f67]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:45Z" finished-at="2017-06-05T16:06:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testToArray_many()[pri:0, instance:LListTest1NG@6d8a00e3]" name="testToArray_many" duration-ms="118" started-at="2017-06-05T16:06:45Z" finished-at="2017-06-05T16:06:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToArray_many -->
      </class> <!-- LListTest1NG -->
      <class name="AListAllTestNG">
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:45Z" finished-at="2017-06-05T16:06:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddEnd_0()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testAddEnd_0" duration-ms="4" started-at="2017-06-05T16:06:45Z" finished-at="2017-06-05T16:06:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddEnd_0 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:45Z" finished-at="2017-06-05T16:06:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddEnd_0()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testAddEnd_0" duration-ms="7" started-at="2017-06-05T16:06:45Z" finished-at="2017-06-05T16:06:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddEnd_0 -->
        <test-method status="PASS" signature="testAddEnd_0()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testAddEnd_0" duration-ms="4" started-at="2017-06-05T16:06:46Z" finished-at="2017-06-05T16:06:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddEnd_0 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:46Z" finished-at="2017-06-05T16:06:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:46Z" finished-at="2017-06-05T16:06:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddEnd_1()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testAddEnd_1" duration-ms="6" started-at="2017-06-05T16:06:46Z" finished-at="2017-06-05T16:06:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddEnd_1 -->
        <test-method status="PASS" signature="testAddEnd_1()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testAddEnd_1" duration-ms="5" started-at="2017-06-05T16:06:46Z" finished-at="2017-06-05T16:06:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddEnd_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:46Z" finished-at="2017-06-05T16:06:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:46Z" finished-at="2017-06-05T16:06:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddEnd_1()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testAddEnd_1" duration-ms="4" started-at="2017-06-05T16:06:46Z" finished-at="2017-06-05T16:06:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddEnd_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:46Z" finished-at="2017-06-05T16:06:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddEnd_2()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testAddEnd_2" duration-ms="3" started-at="2017-06-05T16:06:46Z" finished-at="2017-06-05T16:06:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddEnd_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:46Z" finished-at="2017-06-05T16:06:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddEnd_2()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testAddEnd_2" duration-ms="4" started-at="2017-06-05T16:06:46Z" finished-at="2017-06-05T16:06:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddEnd_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:46Z" finished-at="2017-06-05T16:06:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddEnd_2()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testAddEnd_2" duration-ms="31" started-at="2017-06-05T16:06:46Z" finished-at="2017-06-05T16:06:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddEnd_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:46Z" finished-at="2017-06-05T16:06:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddEnd_many()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testAddEnd_many" duration-ms="5" started-at="2017-06-05T16:06:46Z" finished-at="2017-06-05T16:06:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddEnd_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:46Z" finished-at="2017-06-05T16:06:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddEnd_many()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testAddEnd_many" duration-ms="72" started-at="2017-06-05T16:06:46Z" finished-at="2017-06-05T16:06:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddEnd_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="3" started-at="2017-06-05T16:06:46Z" finished-at="2017-06-05T16:06:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddEnd_many()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testAddEnd_many" duration-ms="4" started-at="2017-06-05T16:06:46Z" finished-at="2017-06-05T16:06:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddEnd_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:46Z" finished-at="2017-06-05T16:06:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddPos_0_ex()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testAddPos_0_ex" duration-ms="15" started-at="2017-06-05T16:06:46Z" finished-at="2017-06-05T16:06:46Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList2.addPos(AList2.java:254)
	at AListAllTestNG.testAddPos_0_ex(AListAllTestNG.java:475)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddPos_0_ex -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:46Z" finished-at="2017-06-05T16:06:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddPos_0_ex()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testAddPos_0_ex" duration-ms="2" started-at="2017-06-05T16:06:46Z" finished-at="2017-06-05T16:06:46Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.addPos(AList0.java:208)
	at AListAllTestNG.testAddPos_0_ex(AListAllTestNG.java:475)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddPos_0_ex -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="3" started-at="2017-06-05T16:06:46Z" finished-at="2017-06-05T16:06:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddPos_0_ex()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testAddPos_0_ex" duration-ms="2" started-at="2017-06-05T16:06:46Z" finished-at="2017-06-05T16:06:46Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList1.addPos(AList1.java:230)
	at AListAllTestNG.testAddPos_0_ex(AListAllTestNG.java:475)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddPos_0_ex -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="4" started-at="2017-06-05T16:06:46Z" finished-at="2017-06-05T16:06:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddPos_1()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testAddPos_1" duration-ms="12" started-at="2017-06-05T16:06:46Z" finished-at="2017-06-05T16:06:46Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList2.addPos(AList2.java:254)
	at AListAllTestNG.testAddPos_1(AListAllTestNG.java:483)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddPos_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:46Z" finished-at="2017-06-05T16:06:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddPos_1()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testAddPos_1" duration-ms="2" started-at="2017-06-05T16:06:46Z" finished-at="2017-06-05T16:06:46Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.addPos(AList0.java:208)
	at AListAllTestNG.testAddPos_1(AListAllTestNG.java:483)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddPos_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:46Z" finished-at="2017-06-05T16:06:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddPos_1()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testAddPos_1" duration-ms="2" started-at="2017-06-05T16:06:46Z" finished-at="2017-06-05T16:06:46Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList1.addPos(AList1.java:230)
	at AListAllTestNG.testAddPos_1(AListAllTestNG.java:483)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddPos_1 -->
        <test-method status="PASS" signature="testAddPos_1_End()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testAddPos_1_End" duration-ms="2" started-at="2017-06-05T16:06:46Z" finished-at="2017-06-05T16:06:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddPos_1_End -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:46Z" finished-at="2017-06-05T16:06:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="73" started-at="2017-06-05T16:06:46Z" finished-at="2017-06-05T16:06:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddPos_1_End()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testAddPos_1_End" duration-ms="23" started-at="2017-06-05T16:06:46Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddPos_1_End -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddPos_1_End()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testAddPos_1_End" duration-ms="7" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddPos_1_End -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="2" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddPos_1_Start()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testAddPos_1_Start" duration-ms="3" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddPos_1_Start -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddPos_1_Start()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testAddPos_1_Start" duration-ms="5" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddPos_1_Start -->
        <test-method status="PASS" signature="testAddPos_1_Start()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testAddPos_1_Start" duration-ms="2" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddPos_1_Start -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddPos_2_End()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testAddPos_2_End" duration-ms="2" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddPos_2_End -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddPos_2_End()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testAddPos_2_End" duration-ms="6" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddPos_2_End -->
        <test-method status="PASS" signature="testAddPos_2_End()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testAddPos_2_End" duration-ms="36" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddPos_2_End -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddPos_many()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testAddPos_many" duration-ms="6" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddPos_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddPos_many()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testAddPos_many" duration-ms="3" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddPos_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddPos_many()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testAddPos_many" duration-ms="5" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddPos_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddStart_0()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testAddStart_0" duration-ms="33" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddStart_0 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddStart_0()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testAddStart_0" duration-ms="6" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddStart_0 -->
        <test-method status="PASS" signature="testAddStart_0()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testAddStart_0" duration-ms="12" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddStart_0 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddStart_1()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testAddStart_1" duration-ms="2" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddStart_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddStart_1()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testAddStart_1" duration-ms="2" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddStart_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddStart_1()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testAddStart_1" duration-ms="2" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddStart_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddStart_2()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testAddStart_2" duration-ms="1" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddStart_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddStart_2()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testAddStart_2" duration-ms="1" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddStart_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddStart_2()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testAddStart_2" duration-ms="1" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddStart_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddStart_many()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testAddStart_many" duration-ms="1" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddStart_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddStart_many()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testAddStart_many" duration-ms="22" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddStart_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddStart_many()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testAddStart_many" duration-ms="6" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddStart_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelEnd_0()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testDelEnd_0" duration-ms="2" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList2.delEnd(AList2.java:311)
	at AListAllTestNG.testDelEnd_0(AListAllTestNG.java:578)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelEnd_0 -->
        <test-method status="PASS" signature="testDelEnd_0()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testDelEnd_0" duration-ms="4" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.delEnd(AList0.java:244)
	at AListAllTestNG.testDelEnd_0(AListAllTestNG.java:578)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelEnd_0 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelEnd_0()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testDelEnd_0" duration-ms="2" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList1.delEnd(AList1.java:260)
	at AListAllTestNG.testDelEnd_0(AListAllTestNG.java:578)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelEnd_0 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelEnd_many()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testDelEnd_many" duration-ms="4" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelEnd_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelEnd_many()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testDelEnd_many" duration-ms="3" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelEnd_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelEnd_many()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testDelEnd_many" duration-ms="1" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelEnd_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelEndt_2()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testDelEndt_2" duration-ms="13" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelEndt_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelEndt_2()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testDelEndt_2" duration-ms="1" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelEndt_2 -->
        <test-method status="PASS" signature="testDelEndt_2()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testDelEndt_2" duration-ms="3" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelEndt_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelPos_1_1()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testDelPos_1_1" duration-ms="275" started-at="2017-06-05T16:06:47Z" finished-at="2017-06-05T16:06:48Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList2.delPos(AList2.java:320)
	at AListAllTestNG.testDelPos_1_1(AListAllTestNG.java:628)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelPos_1_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:48Z" finished-at="2017-06-05T16:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelPos_1_1()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testDelPos_1_1" duration-ms="2" started-at="2017-06-05T16:06:48Z" finished-at="2017-06-05T16:06:48Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.delPos(AList0.java:261)
	at AListAllTestNG.testDelPos_1_1(AListAllTestNG.java:628)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelPos_1_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="3" started-at="2017-06-05T16:06:48Z" finished-at="2017-06-05T16:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelPos_1_1()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testDelPos_1_1" duration-ms="162" started-at="2017-06-05T16:06:48Z" finished-at="2017-06-05T16:06:48Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList1.delPos(AList1.java:267)
	at AListAllTestNG.testDelPos_1_1(AListAllTestNG.java:628)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelPos_1_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:48Z" finished-at="2017-06-05T16:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelPos_1_2()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testDelPos_1_2" duration-ms="58" started-at="2017-06-05T16:06:48Z" finished-at="2017-06-05T16:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelPos_1_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:48Z" finished-at="2017-06-05T16:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelPos_1_2()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testDelPos_1_2" duration-ms="7" started-at="2017-06-05T16:06:48Z" finished-at="2017-06-05T16:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelPos_1_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:48Z" finished-at="2017-06-05T16:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelPos_1_2()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testDelPos_1_2" duration-ms="4" started-at="2017-06-05T16:06:48Z" finished-at="2017-06-05T16:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelPos_1_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:48Z" finished-at="2017-06-05T16:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelPos_2_1()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testDelPos_2_1" duration-ms="8" started-at="2017-06-05T16:06:48Z" finished-at="2017-06-05T16:06:48Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList2.delPos(AList2.java:320)
	at AListAllTestNG.testDelPos_2_1(AListAllTestNG.java:646)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelPos_2_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:48Z" finished-at="2017-06-05T16:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelPos_2_1()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testDelPos_2_1" duration-ms="3" started-at="2017-06-05T16:06:48Z" finished-at="2017-06-05T16:06:48Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.delPos(AList0.java:261)
	at AListAllTestNG.testDelPos_2_1(AListAllTestNG.java:646)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelPos_2_1 -->
        <test-method status="PASS" signature="testDelPos_2_1()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testDelPos_2_1" duration-ms="6" started-at="2017-06-05T16:06:48Z" finished-at="2017-06-05T16:06:48Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList1.delPos(AList1.java:267)
	at AListAllTestNG.testDelPos_2_1(AListAllTestNG.java:646)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelPos_2_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:48Z" finished-at="2017-06-05T16:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:48Z" finished-at="2017-06-05T16:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelPos_2_2()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testDelPos_2_2" duration-ms="64" started-at="2017-06-05T16:06:48Z" finished-at="2017-06-05T16:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelPos_2_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:48Z" finished-at="2017-06-05T16:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelPos_2_2()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testDelPos_2_2" duration-ms="3" started-at="2017-06-05T16:06:48Z" finished-at="2017-06-05T16:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelPos_2_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:48Z" finished-at="2017-06-05T16:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelPos_2_2()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testDelPos_2_2" duration-ms="4" started-at="2017-06-05T16:06:48Z" finished-at="2017-06-05T16:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelPos_2_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:48Z" finished-at="2017-06-05T16:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelPos_2_3()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testDelPos_2_3" duration-ms="5" started-at="2017-06-05T16:06:48Z" finished-at="2017-06-05T16:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelPos_2_3 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="9" started-at="2017-06-05T16:06:48Z" finished-at="2017-06-05T16:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelPos_2_3()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testDelPos_2_3" duration-ms="14" started-at="2017-06-05T16:06:48Z" finished-at="2017-06-05T16:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelPos_2_3 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:48Z" finished-at="2017-06-05T16:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelPos_2_3()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testDelPos_2_3" duration-ms="7" started-at="2017-06-05T16:06:48Z" finished-at="2017-06-05T16:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelPos_2_3 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:48Z" finished-at="2017-06-05T16:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelPos_many_1()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testDelPos_many_1" duration-ms="3" started-at="2017-06-05T16:06:48Z" finished-at="2017-06-05T16:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelPos_many_1 -->
        <test-method status="PASS" signature="testDelPos_many_1()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testDelPos_many_1" duration-ms="6" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelPos_many_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelPos_many_1()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testDelPos_many_1" duration-ms="26" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelPos_many_1 -->
        <test-method status="PASS" signature="testDelPos_many_2()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testDelPos_many_2" duration-ms="2" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelPos_many_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelPos_many_2()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testDelPos_many_2" duration-ms="1" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelPos_many_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelPos_many_2()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testDelPos_many_2" duration-ms="2" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelPos_many_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="5" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelPos_many_3()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testDelPos_many_3" duration-ms="2" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelPos_many_3 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelPos_many_3()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testDelPos_many_3" duration-ms="1" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelPos_many_3 -->
        <test-method status="PASS" signature="testDelPos_many_3()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testDelPos_many_3" duration-ms="2" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelPos_many_3 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelPos_many_ex()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testDelPos_many_ex" duration-ms="3" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList2.delPos(AList2.java:320)
	at AListAllTestNG.testDelPos_many_ex(AListAllTestNG.java:674)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelPos_many_ex -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="4" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelPos_many_ex()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testDelPos_many_ex" duration-ms="1" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.delPos(AList0.java:261)
	at AListAllTestNG.testDelPos_many_ex(AListAllTestNG.java:674)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelPos_many_ex -->
        <test-method status="PASS" signature="testDelPos_many_ex()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testDelPos_many_ex" duration-ms="4" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList1.delPos(AList1.java:267)
	at AListAllTestNG.testDelPos_many_ex(AListAllTestNG.java:674)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelPos_many_ex -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelPost_0()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testDelPost_0" duration-ms="2" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList2.delPos(AList2.java:320)
	at AListAllTestNG.testDelPost_0(AListAllTestNG.java:620)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelPost_0 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelPost_0()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testDelPost_0" duration-ms="2" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.delPos(AList0.java:261)
	at AListAllTestNG.testDelPost_0(AListAllTestNG.java:620)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelPost_0 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelPost_0()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testDelPost_0" duration-ms="1" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList1.delPos(AList1.java:267)
	at AListAllTestNG.testDelPost_0(AListAllTestNG.java:620)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelPost_0 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelStart_0()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testDelStart_0" duration-ms="2" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.delStart(AList0.java:227)
	at AListAllTestNG.testDelStart_0(AListAllTestNG.java:536)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelStart_0 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelStart_0()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testDelStart_0" duration-ms="5" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.delStart(AList0.java:227)
	at AListAllTestNG.testDelStart_0(AListAllTestNG.java:536)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelStart_0 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelStart_0()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testDelStart_0" duration-ms="1" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.delStart(AList0.java:227)
	at AListAllTestNG.testDelStart_0(AListAllTestNG.java:536)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelStart_0 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="2" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelStart_2()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testDelStart_2" duration-ms="6" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelStart_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelStart_2()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testDelStart_2" duration-ms="4" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelStart_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelStart_2()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testDelStart_2" duration-ms="6" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelStart_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelStart_many()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testDelStart_many" duration-ms="3" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelStart_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelStart_many()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testDelStart_many" duration-ms="1" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelStart_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDelStart_many()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testDelStart_many" duration-ms="7" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelStart_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGet_0()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testGet_0" duration-ms="4" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.get(AList0.java:283)
	at AListAllTestNG.testGet_0(AListAllTestNG.java:716)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_0 -->
        <test-method status="PASS" signature="testGet_0()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testGet_0" duration-ms="8" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.get(AList0.java:283)
	at AListAllTestNG.testGet_0(AListAllTestNG.java:716)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_0 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGet_0()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testGet_0" duration-ms="2" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.get(AList0.java:283)
	at AListAllTestNG.testGet_0(AListAllTestNG.java:716)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_0 -->
        <test-method status="PASS" signature="testGet_1_1()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testGet_1_1" duration-ms="7" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.get(AList0.java:283)
	at AListAllTestNG.testGet_1_1(AListAllTestNG.java:724)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_1_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGet_1_1()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testGet_1_1" duration-ms="1" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.get(AList0.java:283)
	at AListAllTestNG.testGet_1_1(AListAllTestNG.java:724)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_1_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGet_1_1()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testGet_1_1" duration-ms="23" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.get(AList0.java:283)
	at AListAllTestNG.testGet_1_1(AListAllTestNG.java:724)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_1_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="11" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGet_1_2()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testGet_1_2" duration-ms="4" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_1_2 -->
        <test-method status="PASS" signature="testGet_1_2()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testGet_1_2" duration-ms="2" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_1_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGet_1_2()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testGet_1_2" duration-ms="4" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_1_2 -->
        <test-method status="PASS" signature="testGet_2_1()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testGet_2_1" duration-ms="1" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.get(AList0.java:283)
	at AListAllTestNG.testGet_2_1(AListAllTestNG.java:741)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_2_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGet_2_1()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testGet_2_1" duration-ms="1" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.get(AList0.java:283)
	at AListAllTestNG.testGet_2_1(AListAllTestNG.java:741)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_2_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGet_2_1()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testGet_2_1" duration-ms="1" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.get(AList0.java:283)
	at AListAllTestNG.testGet_2_1(AListAllTestNG.java:741)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_2_1 -->
        <test-method status="PASS" signature="testGet_2_2()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testGet_2_2" duration-ms="25" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_2_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGet_2_2()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testGet_2_2" duration-ms="1" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_2_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGet_2_2()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testGet_2_2" duration-ms="1" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_2_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGet_many_1()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testGet_many_1" duration-ms="2" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_many_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="2" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGet_many_1()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testGet_many_1" duration-ms="2" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_many_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGet_many_1()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testGet_many_1" duration-ms="12" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_many_1 -->
        <test-method status="PASS" signature="testGet_many_ex()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testGet_many_ex" duration-ms="2" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.get(AList0.java:283)
	at AListAllTestNG.testGet_many_ex(AListAllTestNG.java:758)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_many_ex -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGet_many_ex()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testGet_many_ex" duration-ms="2" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.get(AList0.java:283)
	at AListAllTestNG.testGet_many_ex(AListAllTestNG.java:758)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_many_ex -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="6" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGet_many_ex()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testGet_many_ex" duration-ms="1" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.get(AList0.java:283)
	at AListAllTestNG.testGet_many_ex(AListAllTestNG.java:758)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_many_ex -->
        <test-method status="PASS" signature="testHalfReverse_0()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testHalfReverse_0" duration-ms="1" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHalfReverse_0 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testHalfReverse_0()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testHalfReverse_0" duration-ms="2" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHalfReverse_0 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testHalfReverse_0()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testHalfReverse_0" duration-ms="2" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHalfReverse_0 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testHalfReverse_1()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testHalfReverse_1" duration-ms="12" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHalfReverse_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testHalfReverse_1()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testHalfReverse_1" duration-ms="3" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHalfReverse_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testHalfReverse_1()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testHalfReverse_1" duration-ms="1" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHalfReverse_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testHalfReverse_2()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testHalfReverse_2" duration-ms="1" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHalfReverse_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testHalfReverse_2()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testHalfReverse_2" duration-ms="8" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHalfReverse_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testHalfReverse_2()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testHalfReverse_2" duration-ms="1" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHalfReverse_2 -->
        <test-method status="PASS" signature="testMaxInd_0_ex()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testMaxInd_0_ex" duration-ms="1" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.maxInd(AList0.java:133)
	at AListAllTestNG.testMaxInd_0_ex(AListAllTestNG.java:217)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMaxInd_0_ex -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMaxInd_0_ex()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testMaxInd_0_ex" duration-ms="42" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:49Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.maxInd(AList0.java:133)
	at AListAllTestNG.testMaxInd_0_ex(AListAllTestNG.java:217)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMaxInd_0_ex -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="219" started-at="2017-06-05T16:06:49Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMaxInd_0_ex()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testMaxInd_0_ex" duration-ms="42" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.maxInd(AList0.java:133)
	at AListAllTestNG.testMaxInd_0_ex(AListAllTestNG.java:217)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMaxInd_0_ex -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMaxInd_1()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testMaxInd_1" duration-ms="4" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMaxInd_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMaxInd_1()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testMaxInd_1" duration-ms="4" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMaxInd_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMaxInd_1()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testMaxInd_1" duration-ms="1" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMaxInd_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMaxInd_2()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testMaxInd_2" duration-ms="6" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMaxInd_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMaxInd_2()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testMaxInd_2" duration-ms="3" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMaxInd_2 -->
        <test-method status="PASS" signature="testMaxInd_2()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testMaxInd_2" duration-ms="1" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMaxInd_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMaxInd_many()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testMaxInd_many" duration-ms="4" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMaxInd_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMaxInd_many()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testMaxInd_many" duration-ms="1" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMaxInd_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMaxInd_many()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testMaxInd_many" duration-ms="1" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMaxInd_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMax_0_ex()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testMax_0_ex" duration-ms="7" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.max(AList0.java:99)
	at AListAllTestNG.testMax_0_ex(AListAllTestNG.java:139)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMax_0_ex -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMax_0_ex()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testMax_0_ex" duration-ms="2" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.max(AList0.java:99)
	at AListAllTestNG.testMax_0_ex(AListAllTestNG.java:139)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMax_0_ex -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="3" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMax_0_ex()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testMax_0_ex" duration-ms="15" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.max(AList0.java:99)
	at AListAllTestNG.testMax_0_ex(AListAllTestNG.java:139)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMax_0_ex -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMax_1()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testMax_1" duration-ms="1" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMax_1 -->
        <test-method status="PASS" signature="testMax_1()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testMax_1" duration-ms="2" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMax_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMax_1()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testMax_1" duration-ms="5" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMax_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMax_2()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testMax_2" duration-ms="1" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMax_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMax_2()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testMax_2" duration-ms="2" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMax_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMax_2()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testMax_2" duration-ms="1" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMax_2 -->
        <test-method status="PASS" signature="testMax_many()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testMax_many" duration-ms="2" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMax_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="2" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMax_many()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testMax_many" duration-ms="3" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMax_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMax_many()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testMax_many" duration-ms="1" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMax_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMinInd_0_ex()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testMinInd_0_ex" duration-ms="2" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.minInd(AList0.java:116)
	at AListAllTestNG.testMinInd_0_ex(AListAllTestNG.java:178)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinInd_0_ex -->
        <test-method status="PASS" signature="testMinInd_0_ex()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testMinInd_0_ex" duration-ms="7" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.minInd(AList0.java:116)
	at AListAllTestNG.testMinInd_0_ex(AListAllTestNG.java:178)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinInd_0_ex -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMinInd_0_ex()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testMinInd_0_ex" duration-ms="14" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.minInd(AList0.java:116)
	at AListAllTestNG.testMinInd_0_ex(AListAllTestNG.java:178)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinInd_0_ex -->
        <test-method status="PASS" signature="testMinInd_1()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testMinInd_1" duration-ms="2" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinInd_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="12" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMinInd_1()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testMinInd_1" duration-ms="1" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinInd_1 -->
        <test-method status="PASS" signature="testMinInd_1()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testMinInd_1" duration-ms="1" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinInd_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMinInd_2()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testMinInd_2" duration-ms="1" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinInd_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMinInd_2()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testMinInd_2" duration-ms="2" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinInd_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMinInd_2()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testMinInd_2" duration-ms="9" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinInd_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMinInd_many()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testMinInd_many" duration-ms="1" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinInd_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMinInd_many()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testMinInd_many" duration-ms="1" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinInd_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="3" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMinInd_many()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testMinInd_many" duration-ms="4" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinInd_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMin_0_ex()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testMin_0_ex" duration-ms="5" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.min(AList0.java:32)
	at AListAllTestNG.testMin_0_ex(AListAllTestNG.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMin_0_ex -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMin_0_ex()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testMin_0_ex" duration-ms="1" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.min(AList0.java:32)
	at AListAllTestNG.testMin_0_ex(AListAllTestNG.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMin_0_ex -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMin_0_ex()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testMin_0_ex" duration-ms="8" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.min(AList0.java:32)
	at AListAllTestNG.testMin_0_ex(AListAllTestNG.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMin_0_ex -->
        <test-method status="PASS" signature="testMin_1()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testMin_1" duration-ms="2" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMin_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMin_1()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testMin_1" duration-ms="42" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMin_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="35" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMin_1()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testMin_1" duration-ms="104" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMin_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMin_2()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testMin_2" duration-ms="1" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMin_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMin_2()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testMin_2" duration-ms="4" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMin_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMin_2()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testMin_2" duration-ms="1" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMin_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMin_many()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testMin_many" duration-ms="1" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMin_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMin_many()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testMin_many" duration-ms="1" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMin_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="2" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMin_many()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testMin_many" duration-ms="1" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMin_many -->
        <test-method status="PASS" signature="testReverse_0()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testReverse_0" duration-ms="1" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReverse_0 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:50Z" finished-at="2017-06-05T16:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testReverse_0()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testReverse_0" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReverse_0 -->
        <test-method status="PASS" signature="testReverse_0()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testReverse_0" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReverse_0 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testReverse_1()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testReverse_1" duration-ms="9" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReverse_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testReverse_1()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testReverse_1" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReverse_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testReverse_1()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testReverse_1" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReverse_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testReverse_2()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testReverse_2" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReverse_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testReverse_2()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testReverse_2" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReverse_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testReverse_2()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testReverse_2" duration-ms="4" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReverse_2 -->
        <test-method status="PASS" signature="testReverse_many()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testReverse_many" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReverse_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testReverse_many()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testReverse_many" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReverse_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testReverse_many()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testReverse_many" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReverse_many -->
        <test-method status="PASS" signature="testSet_0()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testSet_0" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.set(AList0.java:292)
	at AListAllTestNG.testSet_0(AListAllTestNG.java:788)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_0 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSet_0()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testSet_0" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.set(AList0.java:292)
	at AListAllTestNG.testSet_0(AListAllTestNG.java:788)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_0 -->
        <test-method status="PASS" signature="testSet_0()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testSet_0" duration-ms="5" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.set(AList0.java:292)
	at AListAllTestNG.testSet_0(AListAllTestNG.java:788)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_0 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSet_1_1()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testSet_1_1" duration-ms="2" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.set(AList0.java:292)
	at AListAllTestNG.testSet_1_1(AListAllTestNG.java:796)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_1_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSet_1_1()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testSet_1_1" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.set(AList0.java:292)
	at AListAllTestNG.testSet_1_1(AListAllTestNG.java:796)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_1_1 -->
        <test-method status="PASS" signature="testSet_1_1()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testSet_1_1" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.set(AList0.java:292)
	at AListAllTestNG.testSet_1_1(AListAllTestNG.java:796)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_1_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSet_1_2()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testSet_1_2" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_1_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSet_1_2()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testSet_1_2" duration-ms="3" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_1_2 -->
        <test-method status="PASS" signature="testSet_1_2()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testSet_1_2" duration-ms="8" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_1_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSet_2_1()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testSet_2_1" duration-ms="2" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.set(AList0.java:292)
	at AListAllTestNG.testSet_2_1(AListAllTestNG.java:814)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_2_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSet_2_1()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testSet_2_1" duration-ms="8" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.set(AList0.java:292)
	at AListAllTestNG.testSet_2_1(AListAllTestNG.java:814)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_2_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSet_2_1()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testSet_2_1" duration-ms="2" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.set(AList0.java:292)
	at AListAllTestNG.testSet_2_1(AListAllTestNG.java:814)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_2_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="33" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSet_2_2()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testSet_2_2" duration-ms="2" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_2_2 -->
        <test-method status="PASS" signature="testSet_2_2()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testSet_2_2" duration-ms="5" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_2_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSet_2_2()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testSet_2_2" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_2_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSet_2_3()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testSet_2_3" duration-ms="5" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_2_3 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="2" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSet_2_3()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testSet_2_3" duration-ms="2" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_2_3 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSet_2_3()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testSet_2_3" duration-ms="4" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_2_3 -->
        <test-method status="PASS" signature="testSet_many_1()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testSet_many_1" duration-ms="7" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_many_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="2" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSet_many_1()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testSet_many_1" duration-ms="4" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_many_1 -->
        <test-method status="PASS" signature="testSet_many_1()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testSet_many_1" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_many_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSet_many_ex()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testSet_many_ex" duration-ms="3" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.set(AList0.java:292)
	at AListAllTestNG.testSet_many_ex(AListAllTestNG.java:842)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_many_ex -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSet_many_ex()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testSet_many_ex" duration-ms="5" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.set(AList0.java:292)
	at AListAllTestNG.testSet_many_ex(AListAllTestNG.java:842)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_many_ex -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSet_many_ex()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testSet_many_ex" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.set(AList0.java:292)
	at AListAllTestNG.testSet_many_ex(AListAllTestNG.java:842)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_many_ex -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSet_null_ex()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testSet_null_ex" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.set(AList0.java:292)
	at AListAllTestNG.testSet_null_ex(AListAllTestNG.java:779)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_null_ex -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSet_null_ex()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testSet_null_ex" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.set(AList0.java:292)
	at AListAllTestNG.testSet_null_ex(AListAllTestNG.java:779)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_null_ex -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSet_null_ex()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testSet_null_ex" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at AList0.set(AList0.java:292)
	at AListAllTestNG.testSet_null_ex(AListAllTestNG.java:779)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_null_ex -->
        <test-method status="PASS" signature="testSort_0()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testSort_0" duration-ms="3" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort_0 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSort_0()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testSort_0" duration-ms="2" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort_0 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSort_0()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testSort_0" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort_0 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSort_1()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testSort_1" duration-ms="2" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSort_1()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testSort_1" duration-ms="7" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSort_1()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testSort_1" duration-ms="2" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="3" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSort_2()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testSort_2" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSort_2()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testSort_2" duration-ms="2" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort_2 -->
        <test-method status="PASS" signature="testSort_2()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testSort_2" duration-ms="2" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testToString_0()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testToString_0" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString_0 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testToString_0()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testToString_0" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString_0 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="3" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testToString_0()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testToString_0" duration-ms="4" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString_0 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="3" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testToString_1()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testToString_1" duration-ms="2" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="54" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testToString_1()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testToString_1" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString_1 -->
        <test-method status="PASS" signature="testToString_1()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testToString_1" duration-ms="2" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testToString_2()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testToString_2" duration-ms="8" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString_2 -->
        <test-method status="PASS" signature="testToString_2()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testToString_2" duration-ms="2" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString_2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testToString_2()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testToString_2" duration-ms="2" started-at="2017-06-05T16:06:51Z" finished-at="2017-06-05T16:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString_2 -->
        <test-method status="PASS" signature="testToString_many()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testToString_many" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testToString_many()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testToString_many" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString_many -->
        <test-method status="PASS" signature="testToString_many()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testToString_many" duration-ms="2" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testToString_null()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testToString_null" duration-ms="2" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString_null -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="4" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testToString_null()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testToString_null" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString_null -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testToString_null()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testToString_null" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString_null -->
        <test-method status="PASS" signature="testdelEnd_1()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testdelEnd_1" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testdelEnd_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testdelEnd_1()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testdelEnd_1" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testdelEnd_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testdelEnd_1()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testdelEnd_1" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testdelEnd_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testdelStart_1()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testdelStart_1" duration-ms="3" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testdelStart_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testdelStart_1()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testdelStart_1" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testdelStart_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testdelStart_1()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testdelStart_1" duration-ms="2" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testdelStart_1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testhalfReverse_many()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testhalfReverse_many" duration-ms="3" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testhalfReverse_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testhalfReverse_many()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testhalfReverse_many" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testhalfReverse_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testhalfReverse_many()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testhalfReverse_many" duration-ms="2" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testhalfReverse_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="5" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testsort_many()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="testsort_many" duration-ms="2" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsort_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testsort_many()[pri:0, instance:AListAllTestNG@2a2d45ba]" name="testsort_many" duration-ms="2" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsort_many -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:AListAllTestNG@20e2cbe0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testsort_many()[pri:0, instance:AListAllTestNG@2a5ca609]" name="testsort_many" duration-ms="1" started-at="2017-06-05T16:06:52Z" finished-at="2017-06-05T16:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsort_many -->
      </class> <!-- AListAllTestNG -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
